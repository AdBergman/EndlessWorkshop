name: Build & Deploy EWShop

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Build
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build & Push Docker image
      - name: Build & Push Docker image
        run: |
          IMAGE_NAME=calmbreakfast/ew-shop
          TAG=latest
          echo "Building Docker image $IMAGE_NAME:$TAG..."
          docker build -t $IMAGE_NAME:$TAG .
          echo "Pushing Docker image to Docker Hub..."
          docker push $IMAGE_NAME:$TAG

      # 5. Set up SSH agent for Lightsail
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

      # 6. Deploy safely to Lightsail (stop old → start new → rollback if needed)
      - name: Deploy to Lightsail via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@3.65.107.28 << 'EOF'
            IMAGE_NAME=calmbreakfast/ew-shop
            TAG=latest
            CONTAINER_NAME=ewshop-app
            BACKUP_CONTAINER=${CONTAINER_NAME}-backup

            echo "Pulling latest image from Docker Hub..."
            if ! docker pull $IMAGE_NAME:$TAG; then
              echo "❌ Failed to pull image $IMAGE_NAME:$TAG"
              exit 1
            fi

            # Backup running container (if any)
            if docker ps -a --format '{{.Names}}' | grep -q "^$CONTAINER_NAME\$"; then
              echo "Stopping and backing up existing container..."
              docker stop $CONTAINER_NAME || true
              docker rename $CONTAINER_NAME $BACKUP_CONTAINER || true
            fi

            echo "Starting new container..."
            if docker run -d \
              --name $CONTAINER_NAME \
              -p 80:8080 \
              -e JAVA_OPTS="-Xms256m -Xmx512m -XX:MaxMetaspaceSize=128m" \
              $IMAGE_NAME:$TAG; then
              echo "✅ New container started successfully!"
              echo "Cleaning up old backup..."
              docker rm $BACKUP_CONTAINER || true
              echo "✅ Deployment complete!"
            else
              echo "❌ Failed to start new container."
              docker logs $CONTAINER_NAME || true
              echo "Rolling back to previous version..."
              docker rm $CONTAINER_NAME || true
              if docker ps -a --format '{{.Names}}' | grep -q "^$BACKUP_CONTAINER\$"; then
                docker rename $BACKUP_CONTAINER $CONTAINER_NAME
                docker start $CONTAINER_NAME
                echo "✅ Rollback complete. Old container restored."
              else
                echo "⚠️ No backup container found, manual restore needed."
              fi
              exit 1
            fi
          EOF
